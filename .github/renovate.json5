{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
  ],
  dependencyDashboard: true,
  configMigration: true,

  // Personal preferences
  timezone: 'America/Los_Angeles',
  assignees: ['@emmercm'],
  reviewers: ['@emmercm'],
  assignAutomerge: false, // default

  // Open PRs immediately for vulnerability alerts
  // Requires "dependency graph" as well as Dependabot "alerts" and "security updates" enabled for the repo
  vulnerabilityAlerts: {
    labels: ['security'],
    platformAutomerge: true,
    // Renovate's defaults for `vulnerabilityAlerts`
    groupName: '',
    schedule: [],
    dependencyDashboardApproval: false,
    minimumReleaseAge: '',
    rangeStrategy: 'update-lockfile',
    commitMessageSuffix: '[SECURITY]',
    branchTopic: '{{{datasource}}}-{{{depName}}}-vulnerability',
    prCreation: 'immediate',
  },
  // WARN: "When the lockfileVersion is higher than 1 in package-lock.json, remediations are only possible when changes are made to package.json."
  transitiveRemediation: true,

  // Separate potentially breaking updates, group others
  separateMultipleMajor: true,
  separateMajorMinor: true, // default
  separateMinorPatch: false, // default

  // Allow auto-merging of PRs, but reduce their spam on the commit log
  schedule: 'on the 1st day of the month',
  prCreation: 'immediate', // default
  prHourlyLimit: 0, // no limit
  automerge: true,
  platformAutomerge: true,

  packageRules: [
    {
      matchCategories: ['node'],
      enabled: false
    },
  ],

  npm: {
    lockFileMaintenance: {
      // These options are required to override the `lockFileMaintenance` defaults
      enabled: true,
      schedule: 'on the 2nd day of the month', // one day after the above, to de-conflict
    },

    // Stability settings: don't raise a PR until a dependency is at least 3 days old
    rangeStrategy: 'bump',
    minimumReleaseAge: '3 days',
    internalChecksFilter: 'strict',

    packageRules: [
      // Dependencies
      {
        // Group non-major dependency updates together
        groupName: 'dependencies',
        matchDepTypes: ['dependencies'],
        matchUpdateTypes: ['patch', 'minor']
      },
      {
        // Dependency updates bump the patch version
        matchDepTypes: ['dependencies'],
        bumpVersion: 'patch'
      },

      // Dev dependencies
      {
        // Group devDependencies together
        matchDepTypes: ['devDependencies'],
        groupName: 'dev dependencies',
        // Only group non-major updates
        matchUpdateTypes: ['patch', 'minor']
      },
      {
        // Group ESLint together so files can be fixed automatically
        matchPackagePatterns: [
          '^@typescript-eslint',
          '^eslint',
        ],
        groupName: 'ESLint',
        postUpgradeTasks: {
          commands: [
            'npm ci --ignore-scripts',
            'npm run lint:fix',
          ],
          fileFilters: ['**/*.js'],
          executionMode: 'branch'
        },
      },
      {
        // Group Jest together because of peerDependencies
        matchPackageNames: [
          '@jest/globals',
          '@types/jest',
          'jest',
          'jest-junit',
          'ts-jest',
        ],
        groupName: 'Jest',
      },
      {
        // Separate Lerna
        matchPackageNames: ['lerna'],
        groupName: 'Lerna',
        prPriority: -10,
      },

      // Group/separate all dependency pinning, perform it immediately
      {
        matchUpdateTypes: ['pin'],
        groupName: 'dependency ranges',
        // Renovate's defaults for these options
        schedule: 'at any time',
        prCreation: 'immediate',
        platformAutomerge: true,
      },

      // Everything else
      {
        matchDepTypes: ['optionalDependencies', 'peerDependencies', 'engines'],
        enabled: false,
      },
    ],
  }
}
